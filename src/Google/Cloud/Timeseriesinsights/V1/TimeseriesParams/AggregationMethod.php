<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/timeseriesinsights/v1/timeseries_insights.proto

namespace Google\Cloud\Timeseriesinsights\V1\TimeseriesParams;

use UnexpectedValueException;

/**
 * Methods by which we can aggregate multiple events by a given
 * [metric][google.cloud.timeseriesinsights.v1.TimeseriesParams.metric].
 *
 * Protobuf type <code>google.cloud.timeseriesinsights.v1.TimeseriesParams.AggregationMethod</code>
 */
class AggregationMethod
{
    /**
     * Unspecified.
     *
     * Generated from protobuf enum <code>AGGREGATION_METHOD_UNSPECIFIED = 0;</code>
     */
    const AGGREGATION_METHOD_UNSPECIFIED = 0;
    /**
     * Aggregate multiple events by summing up the values found in the
     * [metric][google.cloud.timeseriesinsights.v1.TimeseriesParams.metric] dimension.
     *
     * Generated from protobuf enum <code>SUM = 1;</code>
     */
    const SUM = 1;
    /**
     * Aggregate multiple events by averaging out the values found in the
     * [metric][google.cloud.timeseriesinsights.v1.TimeseriesParams.metric] dimension.
     *
     * Generated from protobuf enum <code>AVERAGE = 2;</code>
     */
    const AVERAGE = 2;

    private static $valueToName = [
        self::AGGREGATION_METHOD_UNSPECIFIED => 'AGGREGATION_METHOD_UNSPECIFIED',
        self::SUM => 'SUM',
        self::AVERAGE => 'AVERAGE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(AggregationMethod::class, \Google\Cloud\Timeseriesinsights\V1\TimeseriesParams_AggregationMethod::class);

